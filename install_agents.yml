#author : dpathak@dtis.com

##Version : 1.0.1

- name: Installing agents

  become_method: sudo

  gather_facts: no

  hosts: prd-chnl-fdle-service-01.dtis.com

  serial: 1

  remote_user: dtisadmin

  vars:

    icinga_master_hostname: dtis-hq-stk-01.dtis.com

    icinga_master_ip: 10.10.8.120

    icinga_master_port: 5665

    pki_dir: /var/lib/icinga2/certs

  become: true



###############################################

  tasks:

###############################################


# Handler showing how to clean yum metadata cache
    - name: yum-clean-metadata

      command: yum clean metadata

      args:

        warn: no

    - name: Remove repository from a specific repo file

      file:

        path: "{{ item }}"
        
        state: absent
   
      with_fileglob:
        - "/etc/yum.repos.d/*"

    - name: Copy repo file

      copy:

        src: dtis.repo

        dest: /etc/yum.repos.d/dtis.repo

        owner: root

        group: root

        mode: 0644

    - name: Copy rpm key

      copy:

        src: RPM-GPG-KEY-ICINGA

        dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-ICINGA

        owner: root

        group: root

        mode: 0644

    - name: Import RPM key

      rpm_key:

        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-ICINGA

        state: present

    - name: Installing Icinga2 Agent

      yum:

        name: "{{ packages }}"

      vars:

        packages:

        - icinga2

        - nagios-plugins-all

    - name: Copy Mem Checker

      copy:

        src: check_mem.pl

        dest: /usr/lib64/nagios/plugins/check_mem.pl

        owner: icinga

        group: icinga

        mode: 0760

    - name: Copy Kernel Checker

      copy:

        src: check_kernel

        dest: /usr/lib64/nagios/plugins/check_kernel

        owner: icinga

        group: icinga

        mode: 0760

    - name: Copy YUM Updates Checker

      copy:

        src: check_yum

        dest: /usr/lib64/nagios/plugins/check_yum

        owner: icinga

        group: icinga

        mode: 0760

    - name: Turn off SELinux

      shell: setenforce=0

    - name: get a ticket from icinga2 server

      command: icinga2 pki ticket --cn {{ inventory_hostname }} 

      register: ticket

      delegate_to: "{{ icinga_master_hostname }}"

    - name: delete existing state files

      file: path=/var/lib/icinga2 state=absent

    - name: create pki folder

      file: path=/var/lib/icinga2/certs state=directory mode=0700 owner=icinga group=icinga

    - name: configure icinga2 client

      command: "{{ item }}"

      with_items:

        - "icinga2 pki new-cert --cn {{ inventory_hostname }} --key {{ pki_dir }}/{{ inventory_hostname }}.key --cert {{ pki_dir }}/{{ inventory_hostname }}.crt"

        - "icinga2 pki save-cert --key {{ pki_dir }}/{{ inventory_hostname }}.key --cert {{ pki_dir }}/{{ inventory_hostname }}.crt --trustedcert {{ pki_dir }}/trusted-master.crt --host {{ icinga_master_hostname }}"

        - "icinga2 pki request --host {{ icinga_master_hostname }} --port {{ icinga_master_port }} --ticket {{ ticket.stdout }} --key {{ pki_dir }}/{{ inventory_hostname }}.key --cert {{ pki_dir }}/{{ inventory_hostname }}.crt --trustedcert {{ pki_dir }}/trusted-master.crt --ca {{ pki_dir }}/ca.key"

        - "icinga2 node setup --ticket {{ ticket.stdout }} --endpoint {{ icinga_master_hostname }} --zone {{ inventory_hostname }} --master_host {{ icinga_master_hostname }} --trustedcert {{ pki_dir }}/trusted-master.crt"

    - name: accept remote commands

      lineinfile:

        dest: /etc/icinga2/features-available/api.conf

        regexp: "^  accept_commands ="

        line: "  accept_commands = true"

        insertafter: "ticket_salt = "

    - name: accept remote config

      lineinfile:

        dest: /etc/icinga2/features-available/api.conf

        regexp: "^  accept_config ="

        line: "  accept_config = true"

    - name: Copy zones file

      copy:

        src: zones.conf

        dest: /etc/icinga2/zones.conf

        owner: icinga

        group: icinga

        mode: 0644

        follow: yes

    - name: Ansible service with_items example

      systemd:

        name: "{{ item }}"

        state: restarted

        daemon_reload: yes

      with_items:

        - 'icinga2'
